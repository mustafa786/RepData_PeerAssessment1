setwd("~/Documents/cursos en linea/2015 Data Science Specialization/reproducible research/RepData_PeerAssessment1")
unzip('activity.zip')
raw.data <- read.csv("activity.csv")
View(raw.data)
file.remove('activity.csv')
type(raw.data$date)
head(raw.data)
summary(raw.data)
typeof(raw.data$date)
typeof(raw.data$date)
raw.data$date
raw.data$date <- strptime(raw.data$date, "%Y-%m-%d")
View(raw.data)
raw.data$date
summary(raw.data)
raw.data$date <- strptime(raw.data$date, "%Y-%m-%d")
median(raw.data$steps)
median(raw.data$steps, na.rm = TRUE)
mean(raw.data$steps, na.rm = TRUE)
library(ggplot2)
library(plyr)
tidy.a1 <- aggregate(raw.data, by = raw.data$date, FUN = sum)
raw.data[17571, :]
raw.data[17571, ]
library(ggplot2)  # Histograms, plots, ...
unzip('activity.zip')
raw.data <- read.csv("activity.csv")
file.remove('activity.csv')
raw.data$date <- strptime(raw.data$date, "%Y-%m-%d")
library(ggplot2)  # Histograms, plots, ...
unzip('activity.zip')
raw.data <- read.csv("activity.csv")
file.remove('activity.csv')
## raw.data$date <- strptime(raw.data$date, "%Y-%m-%d")
raw.data[17571, ]
raw.data[is.na(raw.data$date), ]
raw.data[17571, 2]
raw.data <- read.csv("activity.csv", as.is = TRUE)
library(ggplot2)  # Histograms, plots, ...
unzip('activity.zip')
raw.data <- read.csv("activity.csv", as.is = TRUE)
file.remove('activity.csv')
## raw.data$date <- strptime(raw.data$date, "%Y-%m-%d")
raw.data[17571, 2]
raw.data[is.na(raw.data$date), ]
raw.data$date2 <- strptime(raw.data$date, "%Y-%m-%d")
raw.data[is.na(raw.data$date2), ]
raw.data[17571, ]
raw.data[17571, 2]
raw.data[17571, 4]
is.na(raw.data[17571, 4])
is.na(raw.data[17571, 2])
raw.data[where(is.na(raw.data$date2)), ]
raw.data[is.na(raw.data$date2), ]
is.na(raw.data$date2)
sum(is.na(raw.data$date2))
is.na(raw.data$date2(2))
is.na(raw.data$date2[2])
is.na(raw.data[17571, 2])
is.na(raw.data$date2[17571])
sum(is.na(raw.data$date2))
sum(is.na(raw.data$date2[17571]))
sum(is.na(raw.data$date2))
sum(is.na(raw.data$date2[,]))
sum(is.na(raw.data$date2[1,]))
sum(is.na(raw.data$date2[100:200]))
sum(is.na(raw.data$date2[:]))
sum(is.na(raw.data$date2[1:17575]))
sum(is.na(raw.data$date2))
sum(is.na(raw.data[date2,]))
sum(is.na(raw.data[ ,date2]))
sum(is.na(raw.data[ ,'date2']))
sum(is.na(raw.data[[ ,'date2']))
sum(is.na(raw.data[[ ,'date2']]))
sum(is.na(raw.data[['date2']]))
sum(is.na(raw.data$date2[1:17568]))
sum(is.na(raw.data$date2[1:17575]))
sum(is.na(raw.data$date2[1:17595]))
library(ggplot2)  # Histograms, plots, ...
unzip('activity.zip')
raw.data <- read.csv("activity.csv", as.is = TRUE)
file.remove('activity.csv')
raw.data$date <- strptime(raw.data$date, "%Y-%m-%d")
tidy.q1 <- aggregate(raw.data, by = date, FUN = sum)
tidy.q1 <- aggregate(raw.data, by = raw.data$date, FUN = sum)
tidy.q1 <- aggregate(raw.data, by = c('date'), FUN = sum)
tidy.q1 <- aggregate(raw.data, by = raw.data$date, FUN = sum)
tidy.q1 <- aggregate(raw.data, list(date = raw.data$date), sum)
tidy.q1 <- aggregate(. ~ date, data = raw.data, sum)
names(raw.data)
tidy.q1 <- aggregate(. ~ "date", data = raw.data, sum)
tidy.q1 <- aggregate(. ~ date, data = raw.data, sum)
tidy.q1 <- aggregate(date ~ ., data = raw.data, sum)
tidy.q1 <- aggregate(raw.data, list(date = raw.data$date), sum)
library(ddply)
install.packages('ddply')
install.packages('dply')
install.packages("dplyr")
tidy.q1 <- aggregate(raw.data$steps, by = list(raw.data$date), FUN = sum)
tidy.q1 <- aggregate(raw.data$steps, by = list(raw.data$date), FUN = sum)
tidy.q1 <- aggregate(raw.data$steps, by = raw.data$date, FUN = sum)
tidy.q1 <- aggregate(raw.data$steps, by = raw.data$date, FUN = sum)
tidy.q1 <- aggregate(steps ~ date, data=raw.data, FUN=sum)
library(ddply)    # Grouping utilities
library(ggplot2)  # Histograms, plots, ...
unzip('activity.zip')
#raw.data <- read.csv("activity.csv", as.is = TRUE)
raw.data <- read.csv("activity.csv")
file.remove('activity.csv')
##raw.data$date <- strptime(raw.data$date, "%Y-%m-%d")
tidy.q1 <- aggregate(steps ~ date, data=raw.data, FUN=sum)
View(tidy.q1)
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram()
mean(tidy.q1$steps)
median(tidy.q1$steps)
median(tidy.q1$steps, na.rm = TRUE)
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram() + xlab('Total steps by day') + title("total number of steps\n taken per day distribution")
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram() + xlab('Total steps by day') + title("total number of steps\n taken per day distribution")
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram() + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram() + xlab('Total steps by day') + title(main="total number of steps\n taken per day distribution")
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram()  + title(main="total number of steps\n taken per day distribution")+ xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue')  + + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue')  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue')  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 20)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 30)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= range/30)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue')  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 1000)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 1500)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 100)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 1000)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 700)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 800)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 900)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 800)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 500)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 800)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 1000)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 1000) + geom_density()  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 1000)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', stat= ncount, binwidth= 1000)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', ncount, binwidth= 1000)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', aes(y = ..ncount..), binwidth= 1000)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', aes(y = ..ncount..), binwidth= 1000) + geom_density()  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', aes(y = ..ncount..), binwidth= 1000) + geom_density(na.rm=TRUE)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 1000)  + xlab('Total steps by day')
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 1000)  + xlab('Total steps by day') + ggtitle("Total number of steps\n taken per day distribution")
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 1000)  + xlab('Total steps by day') + ggtitle("Total number of steps taken per day distribution")
ggplot(data = tidy.q1, aes(x=steps)) + geom_histogram(color = 'blue', fill= 'light blue', binwidth= 1000)  + xlab('Total steps by day') + ggtitle("Total number of steps taken per day histogram\n(bins of 1000 steps by day)")
stpdays.mean <- mean(tidy.q1$steps, na.rm = TRUE)
stpdays.median <- median(tidy.q1$steps, na.rm = TRUE)
stpdays.mean
stpdays.median
tidy.q2 <- aggregate(steps ~ interval, data=raw.data, FUN=sum)
ggplot(data= tidy.q2, aes(x=interval, y=steps)) + geom_line(color='blue') + geom_point(color='blue')
imputed.data <- raw.data
unique(imputed.data$steps)
imputed.data$
e
unique(imputed.data$interval)
unique(imputed.data$date)
for (interval in unique(imputed.data$interval)){}
for (interval in unique(imputed.data$interval)){}
for (interval in unique(imputed.data$interval)){ imputed.data$steps[is.na(imputed.data$steps) & imputed.data$interval == interval] <- tidy.q2$steps[tidy.q2$interval == interval]}
sum(is.na(raw.data$steps))
sum(is.na(imputed.data$steps))
imputed.data <- raw.data
sum(is.na(imputed.data$steps))
for (interval in unique(tidy.q2$interval)){imputed.data$steps[is.na(imputed.data$steps) & imputed.data$interval == interval] <- tidy.q2$steps[tidy.q2$interval == interval]}
sum(is.na(imputed.data$steps))
summary(raw.data)
summary(imputed.data)
View(imputed.data)
for (interval in unique(tidy.q2$interval)){imputed.data$steps[is.na(imputed.data$steps) & imputed.data$interval == interval] <- tidy.q2$steps[tidy.q2$interval == interval]}
temp2 <- aggregate(steps ~ interval, data=imputed.data, FUN=sum)
View(temp2)
View(temp2)
View(tidy.q2)
View(tidy.q2)
unique(tidy.q2$interval)
temp1 <- aggregate(steps ~ date, data=imputed.data, FUN=sum)
View(temp1)
View(temp1)
View(tidy.q1)
View(tidy.q1)
sum(tidy.q2$steps)
tidy.q2$interval[tidy.q2$steps == max(tidy.q2$steps, na.rm = TRUE)]
length(raw.data$steps)
weekdays(strptime(raw.data$date, "%Y-%m-%d"))
weekdays(strptime(raw.data$date, "%Y-%m-%d")) %in% c("Sunday", "Saturday")
!weekdays(strptime(raw.data$date, "%Y-%m-%d")) %in% c("Sunday", "Saturday")
weekdays(strptime(raw.data$date, "%Y-%m-%d"))
!weekdays(strptime(raw.data$date, "%Y-%m-%d")) %in% c("Sunday", "Saturday")
weekdays(strptime(raw.data$date, "%Y-%m-%d"))
weekdays(strptime(raw.data$date, "%Y-%m-%d"))
!weekdays(strptime(raw.data$date, "%Y-%m-%d")) %in% c("Sunday", "Saturday")
weekdays(strptime(raw.data$date, "%Y-%m-%d"))
!weekdays(strptime(raw.data$date, "%Y-%m-%d")) %in% c("Sunday", "Saturday")
weekdays(strptime(raw.data$date, "%Y-%m-%d"))
!weekdays(strptime(raw.data$date, "%Y-%m-%d")) %in% c("Sunday", "Saturday")
factor(!weekdays(strptime(raw.data$date, "%Y-%m-%d")) %in% c("Sunday", "Saturday"), c(True, False), c('weekdays', 'weekends'))
factor(!weekdays(strptime(raw.data$date, "%Y-%m-%d")) %in% c("Sunday", "Saturday"), labels = c('weekdays', 'weekends'))
factor(!weekdays(strptime(raw.data$date, "%Y-%m-%d")) %in% c("Sunday", "Saturday"), labels = c('weekends', 'weekdays'))
imputed.data$weekday <- factor(!weekdays(strptime(raw.data$date, "%Y-%m-%d")) %in% c("Sunday", "Saturday"), labels = c('weekends', 'weekdays'))
table(imputed.data$weekday)
12960 / 5
4608 / 2
imputed.data$weekday <- factor(!weekdays(strptime(raw.data$date, "%Y-%m-%d"))
%in% c("Sunday", "Saturday"),
labels = c('weekends', 'weekdays'))
data.interval <- aggregate(steps ~ interval, data=dt, FUN=mean)
data.interval <- aggregate(steps ~ interval | weekday, data=imputed.data, FUN=mean)
data.interval <- aggregate(steps ~ interval,weekday, data=imputed.data, FUN=mean)
View(imputed.data)
data.interval <- aggregate(steps ~ interval . weekday, data=imputed.data, FUN=mean)
data.interval <- aggregate(steps ~ interval weekday, data=imputed.data, FUN=mean)
data.interval <- aggregate(steps ~ interval, weekday, data=imputed.data, FUN=mean)
data.interval <- aggregate(steps ~ interval + weekday, data=imputed.data, FUN=mean)
ggplot(data= data.interval, aes(x=interval, y=steps)) +
geom_line(color='blue') +
geom_point(color='blue') +
xlab('5 min interval') +
ylab("average number of steps taken") +
ggtitle("Average number of steps taken for 5 min. interval") +
facet_grid(weekday)
View(data.interval)
ggplot(data= data.interval, aes(x=interval, y=steps)) +
geom_line(color='blue') +
geom_point(color='blue') +
xlab('5 min interval') +
ylab("average number of steps taken") +
ggtitle("Average number of steps taken for 5 min. interval") +
facet_grid(. ~ weekday)
ggplot(data= data.interval, aes(x=interval, y=steps)) +
geom_line(color='blue') +
geom_point(color='blue') +
xlab('5 min interval') +
ylab("average number of steps taken") +
ggtitle("Average number of steps taken for 5 min. interval") +
facet_wrap(~ weekday, ncol=1)
